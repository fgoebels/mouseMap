wilcox.test(coEluteList$positive, coEluteList$negative)
coEluteData = read.table("Yeast/out/Yeast_IEF_IEX.tab", header=T, sep = "\t")[,3:4]
ggplot(coEluteData, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
coEluteList$positive <- coEluteData[which(coEluteData[,2]=="positive"),1]
coEluteList$negative <- coEluteData[which(coEluteData[,2]=="negative"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
coEluteData = read.table("Yeast/out/Yeast_IEF_IEX.tab", header=T, sep = "\t")[,3:4]
ggplot(coEluteData, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
coEluteList$positive <- coEluteData[which(coEluteData[,2]=="positive"),1]
coEluteList$negative <- coEluteData[which(coEluteData[,2]=="negative"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
coEluteData = read.table("Yeast/out/Yeast_IEF_IEX.tab", header=T, sep = "\t")[,3:4]
ggplot(coEluteData, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
coEluteList$positive <- coEluteData[which(coEluteData[,2]=="positive"),1]
coEluteList$negative <- coEluteData[which(coEluteData[,2]=="negative"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
coEluteData = read.table("Yeast/out/Yeast_IEF_IEX.tab", header=T, sep = "\t")[,3:4]
ggplot(coEluteData, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
coEluteList$positive <- coEluteData[which(coEluteData[,2]=="positive"),1]
coEluteList$negative <- coEluteData[which(coEluteData[,2]=="negative"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
coEluteData = read.table("Yeast/out/Yeast_IEF_IEX.tab", header=T, sep = "\t")[,3:4]
ggplot(coEluteData, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
coEluteList$positive <- coEluteData[which(coEluteData[,2]=="positive"),1]
coEluteList$negative <- coEluteData[which(coEluteData[,2]=="negative"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
coEluteData = read.table("out/pierre.dat", header=T, sep = "\t")[,3:4]
ggplot(coEluteData, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
coEluteList$positive <- coEluteData[which(coEluteData[,2]=="positive"),1]
coEluteList$negative <- coEluteData[which(coEluteData[,2]=="negative"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
summary(coEluteList$negative)
summary(coEluteList$positive)
sample(coEluteData, 1000)
dim(coEluteData)
sample(1:31521, 5000)
ggplot(coEluteData[sample(1:31521, 5000),], aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
ggplot(coEluteData[sample(1:31521, 3000),], aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
ggplot(coEluteData[sample(1:31521, 2000),], aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
tmp = coEluteData[sample(1:31521, 2000),]
ls
ls()
coEluteList$negative <- coEluteData[which(tmp[,2]=="negative"),1]
coEluteList$positive <- coEluteData[which(tmp[,2]=="positive"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
pdf("out/pierre.dplo.sel.pdf")
tmp = coEluteData[sample(1:31521, 3000),]
ggplot(tmp, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
coEluteList$negative <- coEluteData[which(tmp[,2]=="negative"),1]
coEluteList$positive <- coEluteData[which(tmp[,2]=="positive"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
length(which(tmp[,2]=="positive")
)
length(which(tmp[,2]=="positive"))
tmp = coEluteData[sample(1:31521, 3500),]
ggplot(tmp, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elutio
coEluteList$negative <- coEluteData[which(tmp[,2]=="negative"),1]
coEluteList$positive <- coEluteData[which(tmp[,2]=="positive"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
tmp = coEluteData[sample(1:31521, 3500),]
ggplot(tmp, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
coEluteList$negative <- coEluteData[which(tmp[,2]=="negative"),1]
coEluteList$positive <- coEluteData[which(tmp[,2]=="positive"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
tmp = coEluteData[sample(1:31521, 3500),]
ggplot(tmp, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
coEluteList$negative <- coEluteData[which(tmp[,2]=="negative"),1]
coEluteList$positive <- coEluteData[which(tmp[,2]=="positive"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
tmp = coEluteData[sample(1:31521, 3500),]
ggplot(tmp, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
coEluteList$negative <- coEluteData[which(tmp[,2]=="negative"),1]
coEluteList$positive <- coEluteData[which(tmp[,2]=="positive"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
tmp = coEluteData[sample(1:31521, 3500),]
ggplot(tmp, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
coEluteList$negative <- coEluteData[which(tmp[,2]=="negative"),1]
coEluteList$positive <- coEluteData[which(tmp[,2]=="positive"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
tmp = coEluteData[sample(1:31521, 3500),]
ggplot(tmp, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
coEluteList$negative <- coEluteData[which(tmp[,2]=="negative"),1]
coEluteList$positive <- coEluteData[which(tmp[,2]=="positive"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
tmp = coEluteData[sample(1:31521, 3500),]
ggplot(tmp, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
coEluteList$negative <- coEluteData[which(tmp[,2]=="negative"),1]
coEluteList$positive <- coEluteData[which(tmp[,2]=="positive"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
tmp = coEluteData[sample(1:31521, 3500),]
ggplot(tmp, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
coEluteList$negative <- coEluteData[which(tmp[,2]=="negative"),1]
coEluteList$positive <- coEluteData[which(tmp[,2]=="positive"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
tmp = coEluteData[sample(1:31521, 3500),]
ggplot(tmp, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
coEluteList$negative <- coEluteData[which(tmp[,2]=="negative"),1]
coEluteList$positive <- coEluteData[which(tmp[,2]=="positive"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
tmp = coEluteData[sample(1:31521, 3500),]
ggplot(tmp, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
coEluteList$negative <- coEluteData[which(tmp[,2]=="negative"),1]
coEluteList$positive <- coEluteData[which(tmp[,2]=="positive"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
tmp = coEluteData[sample(1:31521, 3500),]
ggplot(tmp, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
coEluteList$negative <- coEluteData[which(tmp[,2]=="negative"),1]
coEluteList$positive <- coEluteData[which(tmp[,2]=="positive"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
tmp = coEluteData[sample(1:31521, 3500),]
ggplot(tmp, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
coEluteList$negative <- coEluteData[which(tmp[,2]=="negative"),1]
coEluteList$positive <- coEluteData[which(tmp[,2]=="positive"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
tmp = coEluteData[sample(1:31521, 3500),]
ggplot(tmp, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
coEluteList$negative <- coEluteData[which(tmp[,2]=="negative"),1]
coEluteList$positive <- coEluteData[which(tmp[,2]=="positive"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
tmp = coEluteData[sample(1:31521, 3500),]
ggplot(tmp, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
coEluteList$negative <- coEluteData[which(tmp[,2]=="negative"),1]
coEluteList$positive <- coEluteData[which(tmp[,2]=="positive"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
tmp = coEluteData[sample(1:31521, 3500),]
ggplot(tmp, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
coEluteList$negative <- coEluteData[which(tmp[,2]=="negative"),1]
coEluteList$positive <- coEluteData[which(tmp[,2]=="positive"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
tmp = coEluteData[sample(1:31521, 3500),]
ggplot(tmp, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
coEluteList$negative <- coEluteData[which(tmp[,2]=="negative"),1]
coEluteList$positive <- coEluteData[which(tmp[,2]=="positive"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
tmp = coEluteData[sample(1:31521, 3500),]
ggplot(tmp, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
coEluteList$negative <- coEluteData[which(tmp[,2]=="negative"),1]
coEluteList$positive <- coEluteData[which(tmp[,2]=="positive"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
tmp = coEluteData[sample(1:31521, 3500),]
ggplot(tmp, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
coEluteList$negative <- coEluteData[which(tmp[,2]=="negative"),1]
coEluteList$positive <- coEluteData[which(tmp[,2]=="positive"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
tmp = coEluteData[sample(1:31521, 3500),]
ggplot(tmp, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
coEluteList$negative <- coEluteData[which(tmp[,2]=="negative"),1]
coEluteList$positive <- coEluteData[which(tmp[,2]=="positive"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
pdf("out/pierre.dplo.sel.pdf")
ggplot(tmp, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
dev.off()
dev.off()
pdf("out/pierre.dplo.sel.pdf")
ggplot(tmp, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
dev.off()
coEluteData = read.table("out/pierre.dat", header=T, sep = "\t")[,3:4]
ggplot(coEluteData, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
coEluteList$positive <- coEluteData[which(coEluteData[,2]=="positive"),1]
coEluteList$negative <- coEluteData[which(coEluteData[,2]=="negative"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
wilcox.test(coEluteList$positive, coEluteList$negative)
coEluteData = read.table("out/pierre.dat", header=T, sep = "\t")[,3:4]
ggplot(coEluteData, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
coEluteList$positive <- coEluteData[which(coEluteData[,2]=="positive"),1]
coEluteList$negative <- coEluteData[which(coEluteData[,2]=="negative"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
pdf("Yeast/out/Yeast-IEF-IEX.dplot.pdf")
ggplot(coEluteData, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
dev.off()
coEluteData = read.table("out/pierre.dat", header=T, sep = "\t")[,3:4]
pdf("out/Pierre_CW_120.Dplot.pdf")
ggplot(coEluteData, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
dev.off()
coEluteData = read.table("out/pierre.dat", header=T, sep = "\t")[,3:4]
ggplot(coEluteData, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
coEluteList$positive <- coEluteData[which(coEluteData[,2]=="positive"),1]
coEluteList$negative <- coEluteData[which(coEluteData[,2]=="negative"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
coEluteData = read.table("Yeast/out/Yeast_IEF_IEX.tab", header=T, sep = "\t")[,3:4]
ggplot(coEluteData, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
coEluteList$positive <- coEluteData[which(coEluteData[,2]=="positive"),1]
coEluteList$negative <- coEluteData[which(coEluteData[,2]=="negative"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
pdf("Yeast/out/Yeast-IEF-IEX.dplot.pdf")
ggplot(coEluteData, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
dev.off()
dim(coEluteData)
quit()
coEluteData = read.table("test/Ming_HPLC_120_CELE.dat", header=T, sep = "\t")[,3:4]
coEluteData[1,
]
coEluteData = read.table("test/Ming_HPLC_120_CELE.dat", header=T, sep = "\t")[,3:4]
coEluteData[1,]
coEluteList = list()
coEluteList$positive <- coEluteData[which(coEluteData[,2]=="positive"),1]
coEluteList$negative <- coEluteData[which(coEluteData[,2]=="negative"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
ggplot(coEluteData, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
library(ggplot2)
ggplot(coEluteData, aes(x=score, fill=Label)) + geom_density(alpha=.3) + xlab("Co-elution score")
ggplot(coEluteData, aes(x=score, fill=Class)) + geom_density(alpha=.3) + xlab("Co-elution score")
coEluteData = read.table("test/Ming_HPLC_120_CELE.dat", header=T, sep = "\t")[,3:4]
coEluteData = read.table("test/Reza_IEF-HPLC.dat", header=T, sep = "\t")[,3:4]
coEluteList = list()
coEluteList$positive <- coEluteData[which(coEluteData[,2]=="positive"),1]
coEluteList$negative <- coEluteData[which(coEluteData[,2]=="negative"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
ggplot(coEluteData, aes(x=score, fill=Class)) + geom_density(alpha=.3) + xlab("Co-elution score")
ggplot(coEluteData, aes(x=score, fill=Class)) + geom_density(alpha=.3) + xlab("Co-elution score")
summary(coEluteList$positive)
summary(coEluteList$negative)
coEluteList = list()
coEluteList$positive <- coEluteData[which(coEluteData[,2]=="positive"),1]
coEluteList$negative <- coEluteData[which(coEluteData[,2]=="negative"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
ggplot(coEluteData, aes(x=score, fill=Class)) + geom_density(alpha=.3) + xlab("Co-elution score")
summary(coEluteList$positive)
summary(coEluteList$negative)
coEluteData = read.table("test/Ming_HPLC_120_CELE.dat", header=T, sep = "\t")[,3:4]
coEluteList = list()
coEluteList$positive <- coEluteData[which(coEluteData[,2]=="positive"),1]
coEluteList$negative <- coEluteData[which(coEluteData[,2]=="negative"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
ggplot(coEluteData, aes(x=score, fill=Class)) + geom_density(alpha=.3) + xlab("Co-elution score")
summary(coEluteList$positive)
summary(coEluteList$negative)
coEluteData = read.table("test/Ming_HPLC_120_CELE.dat", header=T, sep = "\t")[,3:4]
coEluteList = list()
coEluteList$positive <- coEluteData[which(coEluteData[,2]=="positive"),1]
coEluteList$negative <- coEluteData[which(coEluteData[,2]=="negative"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
ggplot(coEluteData, aes(x=score, fill=Class)) + geom_density(alpha=.3) + xlab("Co-elution score")
summary(coEluteList$positive)
summary(coEluteList$negative)
coEluteData = read.table("test/Reza_IEF-HPLC.dat", header=T, sep = "\t")[,3:4]
coEluteList = list()
coEluteList$positive <- coEluteData[which(coEluteData[,2]=="positive"),1]
coEluteList$negative <- coEluteData[which(coEluteData[,2]=="negative"),1]
wilcox.test(coEluteList$positive, coEluteList$negative)
ggplot(coEluteData, aes(x=score, fill=Class)) + geom_density(alpha=.3) + xlab("Co-elution score")
summary(coEluteList$positive)
summary(coEluteList$negative)
quit()
data = read.table("test/Metazoan_test.dat", header=T)
data
mycolors.trans = rgb(c(255,0,0), 
               c(0,255,0), 
               c(0,0,255),alpha = 70,maxColorValue = 255) 
summary(data)
protData <- data
unique(data[,4])
wireframe(Counts~IEF*IEX,data=protData,group=type,
          col.groups=mycolors.trans,
          scales = list(arrows=FALSE, col="black",font=10),
          xlab = list("Variable X",rot=30),
          ylab = list("Variable Y",rot=-30),
          zlab = list("Variable Z",rot=90),
          zlim = c(0,100),
          #auto.key=TRUE,
          key=list(text=list(unique(data[,4]),col=mycolors),
                   lines=list(lty=c(1,1,1),col=mycolors)),
          par.settings = list(axis.line = list(col = "transparent")),
)
library(lattice)
library(akima)
wireframe(Counts~IEF*IEX,data=protData,group=type,
          col.groups=mycolors.trans,
          scales = list(arrows=FALSE, col="black",font=10),
          xlab = list("Variable X",rot=30),
          ylab = list("Variable Y",rot=-30),
          zlab = list("Variable Z",rot=90),
          zlim = c(0,100),
          #auto.key=TRUE,
          key=list(text=list(unique(data[,4]),col=mycolors),
                   lines=list(lty=c(1,1,1),col=mycolors)),
          par.settings = list(axis.line = list(col = "transparent")),
)
wireframe(Counts~IEF*IEX,data=protData,group=type,
          col.groups=mycolors.trans,
          scales = list(arrows=FALSE, col="black",font=10),
          xlab = list("Variable X",rot=30),
          ylab = list("Variable Y",rot=-30),
          zlab = list("Variable Z",rot=90),
          zlim = c(0,100),
          #auto.key=TRUE,
          key=list(text=list(c("A","B","C"),col=mycolors),
                   lines=list(lty=c(1,1,1),col=mycolors)),
          par.settings = list(axis.line = list(col = "transparent")),
)
mycolors = rgb(c(255,0,0), 
                     c(0,255,0), 
                     c(0,0,255),maxColorValue = 255) 
wireframe(Counts~IEF*IEX,data=protData,group=type,
          col.groups=mycolors.trans,
          scales = list(arrows=FALSE, col="black",font=10),
          xlab = list("Variable X",rot=30),
          ylab = list("Variable Y",rot=-30),
          zlab = list("Variable Z",rot=90),
          zlim = c(0,100),
          #auto.key=TRUE,
          key=list(text=list(c("A","B","C"),col=mycolors),
                   lines=list(lty=c(1,1,1),col=mycolors)),
          par.settings = list(axis.line = list(col = "transparent")),
)
SurfaceData <- data.frame(
               x=rep(seq(0,100,length.out=10),each=10,times=3),
               y=rep(rep(seq(0,100,length.out=10),times=10),times=3),
               z=c(rep(25,100),seq(30,70,length.out=100),seq(95,75,length.out=100)),
               type=factor(rep(c("A","B","C"),each=100))
                          )
SurfaceData
wireframe(Counts~IEF*IEX,data=protData,group=ProtName,
          col.groups=mycolors.trans,
          scales = list(arrows=FALSE, col="black",font=10),
          xlab = list("Variable X",rot=30),
          ylab = list("Variable Y",rot=-30),
          zlab = list("Variable Z",rot=90),
          zlim = c(0,100),
          #auto.key=TRUE,
          key=list(text=list(c("A","B","C"),col=mycolors),
                   lines=list(lty=c(1,1,1),col=mycolors)),
          par.settings = list(axis.line = list(col = "transparent")),
)
wireframe(Counts~IEF*IEX,data=protData,group=ProtName,
          col.groups=mycolors.trans,
          scales = list(arrows=FALSE, col="black",font=10),
          xlab = list("IEF",rot=30),
          ylab = list("IEX-HPLC",rot=-30),
          zlab = list("Counts",rot=90),
          zlim = c(0,100),
          #auto.key=TRUE,
          key=list(text=list(c("A","B","C"),col=mycolors),
                   lines=list(lty=c(1,1,1),col=mycolors)),
          par.settings = list(axis.line = list(col = "transparent")),
)
wireframe(Counts~IEF*IEX,data=protData,group=ProtName,
          col.groups=mycolors.trans,
          scales = list(arrows=FALSE, col="black",font=10),
          xlab = list("IEF",rot=30),
          ylab = list("IEX-HPLC",rot=-30),
          zlab = list("Counts",rot=90),
          zlim = c(0,100),
          #auto.key=TRUE,
          key=list(text=uniq(protData[,4]),col=mycolors),
                   lines=list(lty=c(1,1,1),col=mycolors)),
          par.settings = list(axis.line = list(col = "transparent")),
)
uniq(protData[,4])
uniqe(protData[,4])
unique(protData[,4])
wireframe(Counts~IEF*IEX,data=protData,group=ProtName,
          col.groups=mycolors.trans,
          scales = list(arrows=FALSE, col="black",font=10),
          xlab = list("IEF",rot=30),
          ylab = list("IEX-HPLC",rot=-30),
          zlab = list("Counts",rot=90),
          zlim = c(0,100),
          #auto.key=TRUE,
          key=list(text=unique(protData[,4]),col=mycolors),
                   lines=list(lty=c(1,1,1),col=mycolors)),
          par.settings = list(axis.line = list(col = "transparent")),
)
wireframe(Counts~IEF*IEX,data=protData,group=ProtName,
          col.groups=mycolors.trans,
          scales = list(arrows=FALSE, col="black",font=10),
          xlab = list("IEF",rot=30),
          ylab = list("IEX-HPLC",rot=-30),
          zlab = list("Counts",rot=90),
          zlim = c(0,100),
          #auto.key=TRUE,
          key=list(text=list(unique(protData[,4]),col=mycolors),
                   lines=list(lty=c(1,1,1),col=mycolors)),
          par.settings = list(axis.line = list(col = "transparent")),
)
unique(protData[,4])
map(paste,(unique(protData[,4])))
apply(paste, unique(protData[,4]))
apply(unique(protData[,4]), paste)
lapply(unique(protData[,4]), paste)
sapply(unique(protData[,4]), paste)
wireframe(Counts~IEF*IEX,data=protData,group=ProtName,
          col.groups=mycolors.trans,
          scales = list(arrows=FALSE, col="black",font=10),
          xlab = list("IEF",rot=30),
          ylab = list("IEX-HPLC",rot=-30),
          zlab = list("Counts",rot=90),
          zlim = c(0,100),
          #auto.key=TRUE,
          key=list(text=list(sapply(unique(protData[,4]), paste),col=mycolors),
                   lines=list(lty=c(1,1,1),col=mycolors)),
          par.settings = list(axis.line = list(col = "transparent")),
)
rgb(rainbow(5))
?rainbow
rgb(c(255,0,0), c(0,255,0),c(0,0,255),c(255,165,0),c(255,255,0), alpha = 70,maxColorValue = 255)
?rgp
?rgb
rgb(c(255,0,0), c(0,255,0),c(0,0,255))
rgb(c(255,0,0), c(0,255,0),c(0,0,255), alpha = 70,maxColorValue = 255)
rgb(c(255,0,0), c(0,255,0),c(0,0,255), c(255,164,0), alpha = 70,maxColorValue = 255)
rgb(c(255,0,0), c(0,255,0),c(0,0,255), c(255,164,0), alpha = 70,maxColorValue = 255)
rgb(255,0,0, alpha = 70,maxColorValue = 255)
c(rgb(255,0,0, alpha = 70,maxColorValue = 255), rgb(0,255,0, alpha = 70,maxColorValue = 255))
rgb(c(255,0,0,255), c(0,255,0,164), c(0,0,255,0), alpha = 70,maxColorValue = 255)
 rgb(255,165,0)
 rgb(255,165,0, maxColorValue = 255)
 rgb(255,165,0, alpha = 70, maxColorValue = 255)
 rgb(c(255),c(165),c(0), alpha = 70, maxColorValue = 255)
 rgb(c(255,255),c(0,165),c(0,0), alpha = 70, maxColorValue = 255)
rgb(c(255,0,0,255), c(0,255,0,164), c(0,0,255,0), alpha = 70,maxColorValue = 255)
rgb(c(255,0,0,255), c(0,255,0,165), c(0,0,255,0), alpha = 70,maxColorValue = 255)
list(sapply(unique(protData[,4]), paste)
)
list(sapply(unique(protData[,4]), paste))
list(lapply(unique(protData[,4]), paste))
list(sapply(unique(protData[,4]), paste))
sapply(unique(protData[,4]), paste)
numProts = length(sapply(unique(protData[,4]), paste))
numProts
c(1)*4
repeat(1,4)
repeat(4,1)
repeat(1)
sequence(1,by0)
sequence(1,by=0)
rep.int(1,4)
c(1,1,1)
quit()
seq(1, length(a), 6)
seq(1, 240, 6)
seq(10, 240, 10)
dataTable = read.table("tmp")
dataTable
plot(dataTable[,1], dataTable[,3])
plot(dataTable[,1], dataTable[,3], "l")
lines(dataTable[,1], dataTable[,2], lty=2)
lines(dataTable[,1], dataTable[,3], lty=3)
plot(dataTable[,1], dataTable[,3], "l", xlim = c(0,1))
plot(dataTable[,1], dataTable[,3], "l", ylim = c(0,1))
lines(dataTable[,1], dataTable[,3], lty=3)
lines(dataTable[,1], dataTable[,2], lty=2)
lines(dataTable[,1], dataTable[,2], lty=5)
lines(dataTable[,1], dataTable[,3], lty=3)
lines(dataTable[,1], dataTable[,1], lty=3)
lines(dataTable[,1], dataTable[,3], lty=3)
lines(dataTable[,1], dataTable[,3], lty=3, col="red")
 plot(dataTable[,1], dataTable[,4], "l")
lines(dataTable[,1], dataTable[,3], lty=3)
lines(dataTable[,1], dataTable[,2], lty=2)
plot(dataTable[,1], dataTable[,4], "l", ylim = c(0,1)
lines(dataTable[,1], dataTable[,2], lty=2)
plot(dataTable[,1], dataTable[,4], "l", ylim = c(0,1)
)
plot(dataTable[,1], dataTable[,4], "l", ylim = c(0,1))
lines(dataTable[,1], dataTable[,2], lty=2)
lines(dataTable[,1], dataTable[,3], lty=3)
dataTable = read.table("tmp")
plot(dataTable[,1], dataTable[,4], "l", ylim = c(0,max(dataTable)))
lines(dataTable[,1], dataTable[,3], lty=3)
lines(dataTable[,1], dataTable[,2], lty=2)
dataTable[100,]
dataTable[200,]
dataTable = read.table("tmp")
plot(dataTable[,1], dataTable[,4], "l", ylim = c(0,max(dataTable)))
lines(dataTable[,1], dataTable[,2], lty=2)
lines(dataTable[,1], dataTable[,3], lty=3)
plot(dataTable[,1], dataTable[,4], "l", ylim = c(0,max(dataTable[-1,])))
dataTable[-1,]
plot(dataTable[,1], dataTable[,4], "l", ylim = c(0,max(dataTable[,-1])))
lines(dataTable[,1], dataTable[,2], lty=2)
lines(dataTable[,1], dataTable[,3], lty=3)
plot(dataTable[,1], dataTable[,4], "l", ylim = c(0,max(dataTable[-1,])))
lines(dataTable[,1], dataTable[,2], lty=2)
lines(dataTable[,1], dataTable[,3], lty=3)
legend("Topleft", c("min", "mean", "max"))
legend("topleft", c("min", "mean", "max"), lty=c(1,2,3))
lot(dataTable[,1], dataTable[,4], "l", ylim = c(0,max(dataTable[,-1])))
plot(dataTable[,1], dataTable[,4], "l", ylim = c(0,max(dataTable[,-1])))
legend("topleft", c("max", "mean", "min[B"), lty=c(2,1,3))
lines(dataTable[,1], dataTable[,2], lty=2)
lines(dataTable[,1], dataTable[,3], lty=3)
dataTable = read.table("tmp")
dataTable
dataTable = read.table("tmp", row.names=1, header=T)
dataTable
dataTable = read.table("tmp", row.names=1, header=T, check.names=F)
dataTable
heatmap(dataTable)
heatmap(t(dataTable))
heatmap(t(t(dataTable)))
heatmap(t(t(dataTable)), Rowv = NA)
heatmap(t(t(dataTable)), Rowv = NA, Colw = NA)
heatmap(t(t(dataTable)), Rowv = NA, Colv = NA)
my_palette <- colorRampPalette(c("blue",  "red"))(n = 299)
library(gplots)
library(RColorBrewer)
heatmap.2(tmp, dendrogram="row", col=my_palette, margins =c(1,17), trace="none", density.info="none", Colv = "NA", labCol=rep("", length(colnames(tmp))))
heatmap.2(dataTable, dendrogram="row", col=my_palette, margins =c(1,17), trace="none", density.info="none", Colv = "NA", labCol=rep("", length(colnames(tmp))))
tmp = t(t(dataTable))
heatmap.2(tmp, dendrogram="row", col=my_palette, margins =c(1,17), trace="none", density.info="none", Colv = "NA", labCol=rep("", length(colnames(tmp))))
heatmap.2(tmp, dendrogram="NA", col=my_palette, margins =c(1,17), trace="none", density.info="none", Colv = "NA", labCol=rep("", length(colnames(tmp))))
heatmap.2(tmp, dendrogram="none", col=my_palette, margins =c(1,17), trace="none", density.info="none", Colv = "NA", labCol=rep("", length(colnames(tmp))))
heatmap.2(tmp, dendrogram="none", col=my_palette, margins =c(1,2), trace="none", density.info="none", Colv = "NA", labCol=rep("", length(colnames(tmp))))
heatmap.2(tmp, dendrogram="none", col=my_palette, margins =c(2,2), trace="none", density.info="none", Colv = "NA")
heatmap.2(tmp, dendrogram="none", col=my_palette, margins =c(2,2), trace="none", density.info="none", Colv = "NA", Rowv = "NA")
dataTable = read.table("tmp", row.names=1, header=T, check.names=F)
dataTable = read.table("tmp", row.names=1, header=T, check.names=F)
tmp = t(t(dataTable))
heatmap.2(tmp, dendrogram="none", col=my_palette, margins =c(2,2), trace="none", density.info="none", Colv = "NA", Rowv = "NA")
heatmap.2(tmp, dendrogram="none", col=my_palette, margins =c(2,2), trace="none", density.info="none", Colv = "NA", Rowv = "NA", main = "fubar")
quit()
